{"version":3,"sources":["styles/Main.js","Components/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Screen","_templateObject2","Prevoius","_templateObject3","Current","_templateObject4","Button","button","_templateObject5","_ref","gridSpan","concat","_ref2","operation","_ref3","control","_ref4","equals","_ref5","decimal","Calculator","current","setCurrent","useState","prevoius","setPrevoius","operations","setOperations","appendValueHandler","el","value","target","getAttribute","includes","chooseOperationHandler","compute","result","previousNumber","parseFloat","currentNumber","isNaN","_jsx","_Fragment","children","_jsxs","onClick","allclearHandler","deleteHandler","String","slice","data","equalHandler","undefined","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10ee92a2.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  justify-content: center;\n  align-content: center;\n  width: 400px;\n  margin: 40px auto;\n  grid-template-columns: repeat(4, 100px);\n  grid-template-rows: minmax(120px, auto) repeat(5, 100px);\n  box-shadow: 2px 2px 10px #333;\n  border-radius: 10px;\n`;\n\nexport const Screen = styled.div`\n  grid-column: 1 / -1;\n  background-color: rgba(60, 64, 67, 0.75);\n  display: flex;\n  justify-content: space-around;\n  flex-direction: column;\n  padding: 10px;\n  word-wrap: break-word;\n  word-break: break-all;\n  text-align: right;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n`;\n\nexport const Prevoius = styled.div`\n  color: rgba(255, 255, 255, 0.75);\n  font-size: 1.5rem;\n`;\n\nexport const Current = styled.div`\n  color: white;\n  font-size: 2.5rem;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  font-size: 2rem;\n  outline: none;\n  border: 1px outset white;\n  background-color: rgba(255, 255, 255, 0.75);\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.9);\n  }\n  ${function ({ gridSpan }) {\n    if (gridSpan) {\n      return `grid-column: span ${gridSpan} ;`;\n    }\n  }};\n  ${({ operation }) => operation && `background-color:gray;`};\n  ${({ control }) => control && `background-color:skyBlue;`};\n  ${({ equals }) =>\n    equals && `background-color:gray;border-bottom-right-radius:10px;`};\n  ${({ decimal }) =>\n    decimal && `background-color:skyBlue;border-bottom-left-radius:10px;`};\n`;\n","import React, { useState } from \"react\";\nimport { Container, Screen, Prevoius, Current, Button } from \"../styles/Main\";\n\nconst Calculator = () => {\n  const [current, setCurrent] = useState(\"\");\n  const [prevoius, setPrevoius] = useState(\"\");\n  const [operations, setOperations] = useState(\"\");\n\n  const appendValueHandler = (el) => {\n    const value = el.target.getAttribute(\"data\");\n    if (value === \".\" && current.includes(\".\")) return;\n    setCurrent(current + value);\n  };\n\n  const deleteHandler = () => {\n    setCurrent(String(current).slice(0, -1));\n  };\n\n  const allclearHandler = () => {\n    setCurrent(\"\");\n    setOperations(\"\");\n    setPrevoius(\"\");\n  };\n\n  const chooseOperationHandler = (el) => {\n    if (current === \"\") return;\n    if (prevoius !== \"\") {\n      let value = compute();\n      setPrevoius(value);\n    } else {\n      setPrevoius(current);\n    }\n    setCurrent(\"\");\n    setOperations(el.target.getAttribute(\"data\"));\n  };\n\n  const equalHandler = () => {\n    let value = compute();\n    if (value === undefined || value == null) return;\n    setCurrent(value);\n    setPrevoius(\"\");\n    setOperations(\"\");\n  };\n  const compute = () => {\n    let result;\n    let previousNumber = parseFloat(prevoius);\n    let currentNumber = parseFloat(current);\n    if (isNaN(previousNumber) || isNaN(currentNumber)) return;\n    switch (operations) {\n      case \"รท\":\n        result = previousNumber / currentNumber;\n        break;\n      case \"x\":\n        result = previousNumber * currentNumber;\n        break;\n      case \"+\":\n        result = previousNumber + currentNumber;\n        break;\n      case \"-\":\n        result = previousNumber - currentNumber;\n        break;\n      default:\n        return;\n    }\n    return result;\n  };\n\n  return (\n    <>\n      <Container>\n        <Screen>\n          <Prevoius>\n            {prevoius} {operations}\n          </Prevoius>\n          <Current>{current}</Current>\n        </Screen>\n        <Button gridSpan={2} control onClick={allclearHandler}>\n          AC\n        </Button>\n        <Button onClick={deleteHandler}>DEL</Button>\n        <Button data={\"รท\"} onClick={chooseOperationHandler} operation>\n          รท\n        </Button>\n        <Button data={7} onClick={appendValueHandler}>\n          7\n        </Button>\n        <Button data={8} onClick={appendValueHandler}>\n          8\n        </Button>\n        <Button data={9} onClick={appendValueHandler}>\n          {\" \"}\n          9\n        </Button>\n        <Button data={\"x\"} operation onClick={chooseOperationHandler}>\n          x\n        </Button>\n        <Button data={4} onClick={appendValueHandler}>\n          4\n        </Button>\n        <Button data={5} onClick={appendValueHandler}>\n          5\n        </Button>\n        <Button data={6} onClick={appendValueHandler}>\n          6\n        </Button>\n        <Button data={\"+\"} operation onClick={chooseOperationHandler}>\n          +\n        </Button>\n        <Button data={1} onClick={appendValueHandler}>\n          1\n        </Button>\n        <Button data={2} onClick={appendValueHandler}>\n          2\n        </Button>\n        <Button data={3} onClick={appendValueHandler}>\n          3\n        </Button>\n        <Button data={\"-\"} operation onClick={chooseOperationHandler}>\n          -\n        </Button>\n        <Button data={\".\"} onClick={appendValueHandler} decimal>\n          .\n        </Button>\n        <Button data={0} onClick={appendValueHandler}>\n          0\n        </Button>\n        <Button gridSpan={2} equals onClick={equalHandler}>\n          =\n        </Button>\n      </Container>\n    </>\n  );\n};\n\nexport default Calculator;\n","import Calculator from \"./Components/Calculator\";\nfunction App() {\n  return (\n    <div>\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}